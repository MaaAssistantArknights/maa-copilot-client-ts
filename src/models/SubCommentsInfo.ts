/* tslint:disable */
/* eslint-disable */
/**
 * ZOOT Plus Backend API
 * ZOOT Plus Backend API
 *
 * The version of the OpenAPI document: v2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SubCommentsInfo
 */
export interface SubCommentsInfo {
    /**
     * 
     * @type {string}
     * @memberof SubCommentsInfo
     */
    commentId: string;
    /**
     * 
     * @type {string}
     * @memberof SubCommentsInfo
     */
    uploader: string;
    /**
     * 
     * @type {string}
     * @memberof SubCommentsInfo
     */
    uploaderId: string;
    /**
     * 
     * @type {string}
     * @memberof SubCommentsInfo
     */
    message: string;
    /**
     * 
     * @type {Date}
     * @memberof SubCommentsInfo
     */
    uploadTime: Date;
    /**
     * 
     * @type {number}
     * @memberof SubCommentsInfo
     */
    like: number;
    /**
     * 
     * @type {number}
     * @memberof SubCommentsInfo
     */
    dislike: number;
    /**
     * 
     * @type {string}
     * @memberof SubCommentsInfo
     */
    fromCommentId: string;
    /**
     * 
     * @type {string}
     * @memberof SubCommentsInfo
     */
    mainCommentId: string;
    /**
     * 
     * @type {boolean}
     * @memberof SubCommentsInfo
     */
    deleted: boolean;
}

/**
 * Check if a given object implements the SubCommentsInfo interface.
 */
export function instanceOfSubCommentsInfo(value: object): value is SubCommentsInfo {
    if (!('commentId' in value) || value['commentId'] === undefined) return false;
    if (!('uploader' in value) || value['uploader'] === undefined) return false;
    if (!('uploaderId' in value) || value['uploaderId'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('uploadTime' in value) || value['uploadTime'] === undefined) return false;
    if (!('like' in value) || value['like'] === undefined) return false;
    if (!('dislike' in value) || value['dislike'] === undefined) return false;
    if (!('fromCommentId' in value) || value['fromCommentId'] === undefined) return false;
    if (!('mainCommentId' in value) || value['mainCommentId'] === undefined) return false;
    if (!('deleted' in value) || value['deleted'] === undefined) return false;
    return true;
}

export function SubCommentsInfoFromJSON(json: any): SubCommentsInfo {
    return SubCommentsInfoFromJSONTyped(json, false);
}

export function SubCommentsInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubCommentsInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'commentId': json['comment_id'],
        'uploader': json['uploader'],
        'uploaderId': json['uploader_id'],
        'message': json['message'],
        'uploadTime': (new Date(json['upload_time'])),
        'like': json['like'],
        'dislike': json['dislike'],
        'fromCommentId': json['from_comment_id'],
        'mainCommentId': json['main_comment_id'],
        'deleted': json['deleted'],
    };
}

export function SubCommentsInfoToJSON(json: any): SubCommentsInfo {
    return SubCommentsInfoToJSONTyped(json, false);
}

export function SubCommentsInfoToJSONTyped(value?: SubCommentsInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'comment_id': value['commentId'],
        'uploader': value['uploader'],
        'uploader_id': value['uploaderId'],
        'message': value['message'],
        'upload_time': ((value['uploadTime']).toISOString()),
        'like': value['like'],
        'dislike': value['dislike'],
        'from_comment_id': value['fromCommentId'],
        'main_comment_id': value['mainCommentId'],
        'deleted': value['deleted'],
    };
}

