/* tslint:disable */
/* eslint-disable */
/**
 * MAA Copilot Center API
 * MAA Copilot Backend Center
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GitProperties
 */
export interface GitProperties {
    /**
     * 
     * @type {string}
     * @memberof GitProperties
     */
    branch?: string;
    /**
     * 
     * @type {string}
     * @memberof GitProperties
     */
    shortCommitId?: string;
    /**
     * 
     * @type {Date}
     * @memberof GitProperties
     */
    commitTime?: Date;
    /**
     * 
     * @type {string}
     * @memberof GitProperties
     */
    commitId?: string;
}

/**
 * Check if a given object implements the GitProperties interface.
 */
export function instanceOfGitProperties(value: object): value is GitProperties {
    return true;
}

export function GitPropertiesFromJSON(json: any): GitProperties {
    return GitPropertiesFromJSONTyped(json, false);
}

export function GitPropertiesFromJSONTyped(json: any, ignoreDiscriminator: boolean): GitProperties {
    if (json == null) {
        return json;
    }
    return {
        
        'branch': json['branch'] == null ? undefined : json['branch'],
        'shortCommitId': json['short_commit_id'] == null ? undefined : json['short_commit_id'],
        'commitTime': json['commit_time'] == null ? undefined : (new Date(json['commit_time'])),
        'commitId': json['commit_id'] == null ? undefined : json['commit_id'],
    };
}

  export function GitPropertiesToJSON(json: any): GitProperties {
      return GitPropertiesToJSONTyped(json, false);
  }

  export function GitPropertiesToJSONTyped(value?: GitProperties | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'branch': value['branch'],
        'short_commit_id': value['shortCommitId'],
        'commit_time': value['commitTime'] == null ? undefined : ((value['commitTime']).toISOString()),
        'commit_id': value['commitId'],
    };
}

