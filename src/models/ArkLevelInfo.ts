/* tslint:disable */
/* eslint-disable */
/**
 * MAA Copilot Center API
 * MAA Copilot Backend Center
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ArkLevelInfo
 */
export interface ArkLevelInfo {
    /**
     * 
     * @type {string}
     * @memberof ArkLevelInfo
     */
    levelId: string;
    /**
     * 
     * @type {string}
     * @memberof ArkLevelInfo
     */
    stageId: string;
    /**
     * 
     * @type {string}
     * @memberof ArkLevelInfo
     */
    catOne: string;
    /**
     * 
     * @type {string}
     * @memberof ArkLevelInfo
     */
    catTwo: string;
    /**
     * 
     * @type {string}
     * @memberof ArkLevelInfo
     */
    catThree: string;
    /**
     * 
     * @type {string}
     * @memberof ArkLevelInfo
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof ArkLevelInfo
     */
    width: number;
    /**
     * 
     * @type {number}
     * @memberof ArkLevelInfo
     */
    height: number;
}

/**
 * Check if a given object implements the ArkLevelInfo interface.
 */
export function instanceOfArkLevelInfo(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "levelId" in value;
    isInstance = isInstance && "stageId" in value;
    isInstance = isInstance && "catOne" in value;
    isInstance = isInstance && "catTwo" in value;
    isInstance = isInstance && "catThree" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "width" in value;
    isInstance = isInstance && "height" in value;

    return isInstance;
}

export function ArkLevelInfoFromJSON(json: any): ArkLevelInfo {
    return ArkLevelInfoFromJSONTyped(json, false);
}

export function ArkLevelInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ArkLevelInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'levelId': json['level_id'],
        'stageId': json['stage_id'],
        'catOne': json['cat_one'],
        'catTwo': json['cat_two'],
        'catThree': json['cat_three'],
        'name': json['name'],
        'width': json['width'],
        'height': json['height'],
    };
}

export function ArkLevelInfoToJSON(value?: ArkLevelInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'level_id': value.levelId,
        'stage_id': value.stageId,
        'cat_one': value.catOne,
        'cat_two': value.catTwo,
        'cat_three': value.catThree,
        'name': value.name,
        'width': value.width,
        'height': value.height,
    };
}

