/* tslint:disable */
/* eslint-disable */
/**
 * MAA Copilot Center API
 * MAA Copilot Backend Center
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CopilotInfo
 */
export interface CopilotInfo {
    /**
     * 
     * @type {number}
     * @memberof CopilotInfo
     */
    id: number;
    /**
     * 
     * @type {Date}
     * @memberof CopilotInfo
     */
    uploadTime: Date;
    /**
     * 
     * @type {string}
     * @memberof CopilotInfo
     */
    uploaderId: string;
    /**
     * 
     * @type {string}
     * @memberof CopilotInfo
     */
    uploader: string;
    /**
     * 
     * @type {number}
     * @memberof CopilotInfo
     */
    views: number;
    /**
     * 
     * @type {number}
     * @memberof CopilotInfo
     */
    hotScore: number;
    /**
     * 
     * @type {boolean}
     * @memberof CopilotInfo
     */
    available: boolean;
    /**
     * 
     * @type {number}
     * @memberof CopilotInfo
     */
    ratingLevel: number;
    /**
     * 
     * @type {boolean}
     * @memberof CopilotInfo
     */
    notEnoughRating: boolean;
    /**
     * 
     * @type {number}
     * @memberof CopilotInfo
     */
    ratingRatio: number;
    /**
     * 
     * @type {number}
     * @memberof CopilotInfo
     */
    ratingType: number;
    /**
     * 
     * @type {number}
     * @memberof CopilotInfo
     */
    commentsCount: number;
    /**
     * 
     * @type {string}
     * @memberof CopilotInfo
     */
    content: string;
    /**
     * 
     * @type {number}
     * @memberof CopilotInfo
     */
    like: number;
    /**
     * 
     * @type {number}
     * @memberof CopilotInfo
     */
    dislike: number;
}

/**
 * Check if a given object implements the CopilotInfo interface.
 */
export function instanceOfCopilotInfo(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "uploadTime" in value;
    isInstance = isInstance && "uploaderId" in value;
    isInstance = isInstance && "uploader" in value;
    isInstance = isInstance && "views" in value;
    isInstance = isInstance && "hotScore" in value;
    isInstance = isInstance && "available" in value;
    isInstance = isInstance && "ratingLevel" in value;
    isInstance = isInstance && "notEnoughRating" in value;
    isInstance = isInstance && "ratingRatio" in value;
    isInstance = isInstance && "ratingType" in value;
    isInstance = isInstance && "commentsCount" in value;
    isInstance = isInstance && "content" in value;
    isInstance = isInstance && "like" in value;
    isInstance = isInstance && "dislike" in value;

    return isInstance;
}

export function CopilotInfoFromJSON(json: any): CopilotInfo {
    return CopilotInfoFromJSONTyped(json, false);
}

export function CopilotInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CopilotInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'uploadTime': (new Date(json['upload_time'])),
        'uploaderId': json['uploader_id'],
        'uploader': json['uploader'],
        'views': json['views'],
        'hotScore': json['hot_score'],
        'available': json['available'],
        'ratingLevel': json['rating_level'],
        'notEnoughRating': json['not_enough_rating'],
        'ratingRatio': json['rating_ratio'],
        'ratingType': json['rating_type'],
        'commentsCount': json['comments_count'],
        'content': json['content'],
        'like': json['like'],
        'dislike': json['dislike'],
    };
}

export function CopilotInfoToJSON(value?: CopilotInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'upload_time': (value.uploadTime.toISOString()),
        'uploader_id': value.uploaderId,
        'uploader': value.uploader,
        'views': value.views,
        'hot_score': value.hotScore,
        'available': value.available,
        'rating_level': value.ratingLevel,
        'not_enough_rating': value.notEnoughRating,
        'rating_ratio': value.ratingRatio,
        'rating_type': value.ratingType,
        'comments_count': value.commentsCount,
        'content': value.content,
        'like': value.like,
        'dislike': value.dislike,
    };
}

